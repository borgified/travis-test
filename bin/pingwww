#!/usr/bin/perl
#
#   This program is licensed under the same terms as Perl itself
#
#   Sean Dague <sldague@us.ibm.com>

=head1 NAME

pingwww - program for "pinging" webservers

=head1 SYNOPSIS

pingwww [-c iterations] [-p proxy] [-t timeout] [-h] hostname

=head1 DESCRIPTION

Pingwww uses the Net::Ping::HTTP module to send HEAD requests
to the host specified by hostname.

=head1 AUTHOR

Sean Dague <sldague@us.ibm.com>

=head1 SEE ALSO

L<Net::Ping::HTTP>, L<Time::HiRes>, L<perl> 

=cut

use strict;
use Carp;
use Getopt::Std;
use Net::Ping::HTTP;
use Time::HiRes qw(gettimeofday tv_interval);
use Socket;

$| = 1;
my %opts;

getopt('cpth',\%opts) or croak("Couldn't parse options");

if($opts{h}) {
    usage();
}

my $max = $opts{c} || 1000;

my %vars = ();

if($opts{p}) {
    $vars{PROXY} = $opts{p};
}

if($opts{t}) {
    $vars{TIMEOUT} = $opts{t};
}

my $pinger = new Net::Ping::HTTP(%vars);
my $host = $ARGV[0];
my $packedip = gethostbyname($host);
my $ip = inet_ntoa($packedip);

print "PING HTTP $host ($ip):\n";

for(my $i = 0 ; $i < $max; $i++) {
    my $start = [gettimeofday()];
    my $rc = $pinger->ping("http://$host");
    if ($rc < 400) {
        print "Response $rc from $ip: ";
        my $elapsed = tv_interval ( $start );
        print "$elapsed seconds\n";
    } else {
        print "Response $rc from $ip: ";
        print "failed\n";
    }
}

sub usage {
    print <<USAGE;
usage: $0 [-c number of iterations] [-p proxy] [-t timeout] [-h] hostname
  where 
    -h : this message
    -c : number of iterations to ping the host.  Defaults to 1000
    -p : http proxy to use for the ping
    -t : timeout value.  Defaults to 10 secs if none is specified

USAGE

  exit(1);
}
